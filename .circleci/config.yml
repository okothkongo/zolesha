version: 2
jobs:
  build:
    docker:
      - image: circleci/elixir
        environment:
          MIX_ENV: test    
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: zolesha_test
          POSTGRES_PASSWORD:
          
    working_directory: ~/app
    
    steps:
      - run: cd ..
      - run: sudo chmod -R 777 app
      - run: cd app
      - checkout:

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build" 

      - restore_cache:
          key: phantomjs-2-1-1
      - run:
          name: Install PhantomJS Dependencies
          command: |
            [ -f /usr/local/bin/phantomjs ] || sudo apt-get update
            [ -f /usr/local/bin/phantomjs ] || sudo apt-get install -y fontconfig wget
      - run:
          name: Install PhantomJS
          command: |
              [ -f /usr/local/bin/phantomjs ] || wget -O /tmp/phantomjs.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
              [ -f /usr/local/bin/phantomjs ] || tar -xjf /tmp/phantomjs.tar.bz2 -C /tmp
              [ -f /usr/local/bin/phantomjs ] || sudo mv /tmp/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs      
      
      - save_cache:
          key: phantomjs-2-1-1
          paths:
            - /usr/local/bin/phantomjs 
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix ecto.create && mix ecto.migrate
      - run: mix check_lint
      - run: mix test